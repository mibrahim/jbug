<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<!-- Reference, see SUN's checkstyle.xml. I used it as a starting template -->
<module name="Checker">
	<module name="Translation"/>
	<module name="FileLength"/>
	<module name="FileTabCharacter">
		<property name="eachLine" value="true"/>
	</module>

	<!-- \s matches whitespace character, $ matches end of line. -->
	<module name="RegexpSingleline">
		<property name="format" value="\s+$"/>
		<property name="message" value="Line has trailing spaces."/>
	</module>

	<module name="TreeWalker">

		<property name="cacheFile" value="${checkstyle.cache.file}"/>

		<!-- Checks for Javadoc comments.                     -->
		<!-- See http://checkstyle.sf.net/config_javadoc.html -->
		<module name="JavadocMethod">
			<property name="allowUndeclaredRTE" value="true"/>
			<property name="allowThrowsTagsForSubclasses" value="true"/>
			<property name="allowMissingPropertyJavadoc" value="true"/>
			<property name="scope" value="protected"/>
		</module>
		<module name="JavadocType">
			<property name="scope" value="protected"/>
		</module>
		<module name="JavadocVariable">
			<property name="scope" value="protected"/>
		</module>
		<module name="JavadocStyle">
			<property name="scope" value="protected"/>
			<property name="checkFirstSentence" value="false"/>
		</module>
		<!-- Checks for Naming Conventions.                  -->
		<!-- See http://checkstyle.sf.net/config_naming.html -->
		<module name="ConstantName">
			<!-- Allow "log" as a constant - don't force LOG -->
			<property name="format" value="^log$|^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
		</module>
		<module name="LocalFinalVariableName"/>
		<module name="LocalVariableName"/>
		<module name="MemberName"/>
		<module name="MethodName"/>
		<module name="PackageName"/>
		<module name="ParameterName"/>
		<module name="StaticVariableName"/>
		<module name="TypeName"/>

		<!-- Checks for Headers                                -->
		<!-- See http://checkstyle.sf.net/config_header.html   -->
		<!-- <module name="Header">                            -->
		<!-- The follow property value demonstrates the ability     -->
		<!-- to have access to ANT properties. In this case it uses -->
		<!-- the ${basedir} property to allow Checkstyle to be run  -->
		<!-- from any directory within a project. See property      -->
		<!-- expansion,                                             -->
		<!-- http://checkstyle.sf.net/config.html#properties        -->
		<!-- <property                                              -->
		<!--     name="headerFile"                                  -->
		<!--     value="${basedir}/java.header"/>                   -->
		<!-- </module> -->

		<!-- Checks for imports                              -->
		<!-- See http://checkstyle.sf.net/config_import.html -->
		<module name="AvoidStarImport"/>
		<module name="IllegalImport"/>
		<!-- defaults to sun.* packages -->
		<module name="RedundantImport"/>
		<module name="UnusedImports"/>
		<!-- Checks for Size Violations.                    -->
		<!-- See http://checkstyle.sf.net/config_sizes.html -->
		<!-- MR: Changed max length to 120 -->
		<module name="LineLength">
			<property name="max" value="120"/>
		</module>
		<module name="MethodLength"/>
		<module name="ParameterNumber"/>

		<!-- Checks for whitespace                               -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html -->
		<module name="EmptyForIteratorPad"/>
		<module name="MethodParamPad"/>
		<module name="NoWhitespaceAfter"/>
		<module name="NoWhitespaceBefore">
			<property name="tokens" value="DOT"/>
			<property name="allowLineBreaks" value="true"/>
		</module>
		<module name="OperatorWrap"/>
		<module name="ParenPad"/>
		<module name="TypecastParenPad"/>
		<module name="WhitespaceAfter"/>
		<module name="WhitespaceAround">
			<property name="tokens" value="ASSIGN"/>
		</module>
		<!-- Modifier Checks                                    -->
		<!-- See http://checkstyle.sf.net/config_modifiers.html -->
		<module name="ModifierOrder"/>
		<module name="RedundantModifier"/>
		<!-- Checks for blocks. You know, those {}'s         -->
		<!-- See http://checkstyle.sf.net/config_blocks.html -->
		<module name="AvoidNestedBlocks"/>
		<module name="EmptyBlock"/>
		<module name="LeftCurly">
			<property name="option" value="nl"/>
		</module>
		<module name="NeedBraces"/>
		<module name="RightCurly"/>
		<!-- Checks for common coding problems               -->
		<!-- See http://checkstyle.sf.net/config_coding.html -->
		<!-- MR: Removed AvoidInlineConditionals because they're cool. -->
		<!--<module name="AvoidInlineConditionals"/>-->
		<module name="DoubleCheckedLocking"/>
		<module name="EmptyStatement"/>
		<module name="EqualsHashCode"/>
		<!--module name="HiddenField"/-->
		<module name="IllegalInstantiation"/>
		<module name="InnerAssignment"/>
		<!--module name="MagicNumber"/-->
		<module name="MissingSwitchDefault"/>
		<module name="RedundantThrows"/>
		<module name="SimplifyBooleanExpression"/>
		<module name="SimplifyBooleanReturn"/>
		<!-- Checks for class design                         -->
		<!-- See http://checkstyle.sf.net/config_design.html -->
		<!--module name="DesignForExtension"/-->
		<module name="FinalClass"/>
		<module name="HideUtilityClassConstructor"/>
		<module name="InterfaceIsType"/>
		<!-- MR: Modified visibility to allow package variables w/o getters/setters (for testing) -->
		<module name="VisibilityModifier">
			<property name="packageAllowed" value="true"/>
			<property name="protectedAllowed" value="true"/>
		</module>

		<!-- Miscellaneous other checks.                   -->
		<!-- See http://checkstyle.sf.net/config_misc.html -->
		<module name="ArrayTypeStyle"/>
		<module name="FinalParameters">
			<!-- MR: enforce final parameters only for constructors -->
			<property name="tokens" value="CTOR_DEF"/>
		</module>
		<!-- <module name="TodoComment"/> -->
		<module name="UpperEll"/>
		<module name="NestedIfDepth">
			<property name="max" value="3"/>
		</module>
		<module name="NestedTryDepth"/>
		<module name="ExplicitInitialization"/>
	</module>

</module>
